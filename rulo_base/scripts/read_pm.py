#!/usr/bin/env python
import os
import csv
import rospy
from geometry_msgs.msg import Point, Pose, Quaternion
from visualization_msgs.msg import Marker

frame = '/map'
class VizualMark:
    def __init__(self):
        rospy.init_node('viz')
        self.marker_pub = rospy.Publisher('~markers', Marker, queue_size=5)
        self.rate = 20
        self.r = rospy.Rate(self.rate)
        self.marker = Marker()
        self.marker.header.frame_id = frame
        self.marker.header.stamp = rospy.Time.now()
        self.marker.type = self.marker.CUBE
        
        self.marker.lifetime = rospy.Duration(0)
        self.marker.id = 0
        self.marker.scale.x =0.025
        self.marker.scale.y = 0.025
        self.marker.scale.z = 0.01
        
        self.marker.pose.orientation= Quaternion()
                
        
       
           
        
        self.mass=[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]

          
        self.x_marker = [0.5120033771898083, 0.57250815050746, 0.7013842242863574, 0.7049940046161074, 0.6904362369837843, 0.6503405285195352, 0.6074495383183272, 0.604829088191548, 0.5574795743499185, 0.5492724066884694, 0.4448207107443384, 0.3699203610797597, 0.2643912834621638, 0.2578418194158516, 0.2835418799496898, 0.3269103641455118, 0.3389837598395199, 0.31055413096944573, 0.3115115609611878, 0.313145561022407, 0.3155459353268584, 0.31538136326402955, 0.3153537077817139, 0.3153229657720722, 0.3151931112942188, 0.31501592490044317, 0.31497757639791146, 0.3149285047547664, 0.31494381174165365, 0.31491164903617386, 0.3148216521793128, 0.3148840735625045, 0.3146561484547026, 0.3146240715259756, 0.3145736754421662, 0.31455228560762083, 0.31427624587381775, 0.31417867651644604, 0.31398362084644393, 0.3138115091117081, 0.3135694982803803, 0.3135664779333751, 0.3135816847691866, 0.38200183168971913, 0.4617566518705045, 0.5128011075752487, 0.5491604230877927, 0.5648951974849089, 0.7878535738321479, 1.0313317984584556, 1.2052831986168422, 1.246695406270157, 1.2904843636153114, 1.3701664395108595, 1.4087301296779957, 1.4113568312911182, 1.390676583691235, 1.3960511545591752, 1.6696227212786918, 2.062186354779458, 2.447113182182443, 2.7687468596962983, 2.7765362104840903, 2.9471360222102834, 2.971914679593355, 3.0190160961579817, 2.994556881209846, 2.9211340570989455, 2.7901626406954896, 2.7685243784225735, 2.504354401427019, 2.3567029024917483, 2.314956266536616, 2.2905681291132662, 2.33849007805928, 2.3478051450080653, 2.3341320024720242, 2.222646777410811, 2.231846784513385, 2.180403413494554, 2.195483995668363, 2.2554326286002135, 2.282816424233167, 2.3426064576516277, 2.4272870189225557, 2.6230247785568808, 2.7655642166712706, 2.956504432710287, 3.1067914371790666, 3.099880683788858, 3.109261117503351, 3.047765599180922, 2.9447660699288, 2.8128391772649612, 2.7202929820904593, 2.723193594023241, 2.758487645295138, 2.80723828666435, 2.8193063044199285, 2.7880277309756085, 2.764062870443621, 2.83429332881576, 2.9715542933991346, 2.975493808912705, 3.043397809522075, 3.077141497236177, 3.331385489311486, 3.500642812778173, 3.4969531242428795, 3.4801061999784206, 3.4321680568275634, 3.3299876170062435, 3.2155869786369724, 3.204728952336461, 3.048925791191934, 2.6802869165103234, 2.6418980878019096, 2.6121257840093293, 2.615778662759189, 2.651582129507923, 2.7192886570184633, 2.7228412772665758, 2.6204653089426673, 2.523481521719579, 2.3634231975698916, 2.3640073176751306, 2.348966554122601, 2.346902919607756, 2.338837427955574, 2.302798888102353, 2.3058735567455884, 2.2457789546197757, 2.1988755902698705, 2.2281653847672365, 2.2306512386893624, 2.2474067484350475, 2.2439882510303786, 2.243677210684931, 2.2434973760497905, 2.2434467620786185, 2.243448359166405, 2.2433571261154177, 2.2450603496264634, 2.2282165032569248, 2.2022890013166148, 2.185439172403222, 2.1720064347795844, 2.198045712293027, 2.4206295800324513, 2.4831638105587786, 2.585494955573025, 2.950275520418895, 3.3353665856826487, 3.7345640633967463, 3.9705249450765385, 4.127569587033294, 4.194155601705398, 4.21737791070276, 4.229313651513369, 4.177952747671329, 4.098006825273639, 3.743472479651118, 3.4511577112682326, 3.4659251518443814, 3.524445458283417, 3.5667477537893753, 3.527011118294782, 3.5080123593068886, 3.4238838837605923, 3.25457528482139, 3.1017803104827646, 3.1003523953088505, 3.0531188412246717, 3.0603245619556607, 2.8674338460999094, 2.842571761432171, 2.841709326988734, 2.813548168586877, 2.680197480566889, 2.703642681146873, 2.5014038699533065, 2.2361896086281767, 2.137745924218775, 2.1309169749612042, 1.8718400198822862, 1.501389866559692, 1.5212263274070437, 1.5164260719774634, 1.2261768970091458, 0.8655128242509054, 0.7654922345793336, 0.7595808614817317, 0.8119718665436242, 0.8133173565756968, 0.8212883961316586, 0.7055379032432638, 0.6022817216479699, 0.6146804486595232, 0.5699316191907031, 0.48012287029958234, 0.22880139654064724, 0.08316860730056552, -0.013377479846295337, -0.24831713806516076, -0.2464426431806137, -0.4297896192429178, -0.7428195802089324, -0.768677790399567, -0.8691573792926048, -0.8726074746464771, -0.8881468738681924, -0.9187074323983593, -1.0589875446801758, -1.0986706964643878, -1.093390514237818, -1.0950369061885268, -1.0702185357348197, -1.0373367715928885, -1.0549640337657338, -1.1505440397685884, -1.2458570932250255, -1.2673103136280521, -1.2573002343631927, -1.1999185489501123, -1.1874494496923456, -1.2025720889385836, -1.1701813422357765, -1.1724156732008177, -1.1356340293048461, -1.0905982975874289, -1.0887518105265954, -0.9301240809884996, -0.8669772385870682, -0.8033590344923836, -0.70052538052918, -0.6979790914284654, -0.5383326507022872, -0.18976397954354374, 0.16880662260781953, 0.5474601370265981, 0.9253219555507082, 1.0257828653016818, 1.0811507900366184, 1.1965252281342227, 1.3564529740183948, 1.550557437729206, 1.624580638161133, 1.6640777354285223, 1.6655599720703258, 1.6063423512467458, 1.5166845471464285, 1.4335574239430127, 1.4149124456600992, 1.3375291159734246, 1.2784879368034683, 1.2591060967065206, 1.2765718801477544, 1.1723679897010029, 1.1555055833017116, 1.1029593495810794, 0.7745105214857393, 0.6229075926299124, 0.3691423107444809, 0.12522224190912778, -0.019793673566511405, -0.3239559917414154, -0.4948292219788133, -0.7388568696282771, -1.094657504179151, -1.0978716248139868, -1.155317086032687, -1.1356278434343663, -1.1251391254553713, -1.02226505643468, -1.0222971552804125, -0.9155606934754643, -0.916882236643437, -0.71843885884189, -0.33154650571677813, 0.060678773450642876, 0.46021439430516686, 0.8477374622075668, 0.9986951004143858, 1.1412099300321548, 1.1495745689946175, 1.181344199537055, 1.218895814933569, 1.2236323660442259, 1.223613045774988, 1.2236306368232466]
        self.y_marker =  [0.0861631725031852, 0.0965339102814046, 0.12035891201044996, 0.14283192593671945, 0.1484224941957492, 0.08948050071519725, 0.029760005174996107, 0.006610409566452979, -0.09258172854786303, -0.09191375259424192, -0.13766403888373496, -0.22804212419131015, -0.26956248212265915, -0.27637981327110966, -0.37531034168895766, -0.45504840764912374, -0.4719834016616007, -0.5621553727155184, -0.5575468078815284, -0.5928007947313666, -0.5922115621570778, -0.5920095253606001, -0.5919755138233525, -0.5919377343573986, -0.5917778710957776, -0.5915596315110443, -0.5915123430045556, -0.5914518020122685, -0.5914707436675979, -0.5914309807986818, -0.5913196530957001, -0.5913969043513212, -0.5911145535500805, -0.5910747214462466, -0.5910121196844423, -0.590985569134127, -0.5906419062772004, -0.5905203613360681, -0.5902772048138853, -0.5900624743629332, -0.5897602000645625, -0.5897563788167679, -0.5897754009590965, -0.6771188397600916, -0.7715139391766771, -0.8842578230803674, -0.9788093862691157, -0.9908576147385018, -1.0090317861228533, -0.9945606815149601, -0.9855263461299837, -0.9240488990344158, -0.8648273430962039, -0.5554136542296282, -0.4459474882493455, -0.24295699432785883, -0.22559200928444484, -0.21996801217524095, -0.20955427988914613, -0.18141442515379125, -0.0961385251499337, -0.029798215695228614, -0.027465699654950826, -0.22655268750871183, -0.278684201578503, -0.37032916767475865, -0.5647367922712645, -0.7585095943009079, -1.1044420127679033, -1.1837198276860301, -1.3164775758499023, -1.386275749224363, -1.4313042107734306, -1.4403176905378299, -1.4869553906978243, -1.4829039092508252, -1.4850715714999967, -1.6456452021906867, -1.6719133857034243, -1.9762524577805087, -2.111795142707026, -2.424468013829499, -2.640655648347371, -2.817697682319074, -2.856056372857063, -2.933013920386683, -2.9806646813750595, -3.015180436711714, -2.9654217516333423, -2.9527207119546808, -2.8089233941245584, -2.632054363808852, -2.2666590597426084, -1.9075013165431514, -1.5221798553163357, -1.437946345719936, -1.106343068114819, -0.7255579259102704, -0.3180953069687701, 0.059948788794439656, 0.35997178796002677, 0.49487733391022065, 0.855391798351359, 0.9116585868506012, 0.9833486190480367, 1.0022073540450465, 1.0144012311601194, 1.0311778683581583, 1.036751137534993, 1.0756715159676382, 1.2325593117791231, 1.5880082918975544, 1.948373344314637, 1.907391649713102, 1.8785920248101684, 1.8326703418388175, 1.8253341277605124, 1.8352064234645908, 1.851275401729285, 1.8057957077436904, 1.5932615975909405, 1.5804209395094222, 1.5449981533706487, 1.504300546937797, 1.5293066825950963, 1.5902985493012292, 1.6366141039471447, 1.6764886579038043, 1.7804154193345307, 2.123144112302803, 2.528173980205409, 2.9233008380581715, 3.2754150221328207, 3.246746790716135, 3.253007633904647, 3.2529370437954306, 3.2544657042296117, 3.2548082815946096, 3.255006834726592, 3.255062847398057, 3.2550610118053482, 3.2551623815345603, 3.2533345091350743, 3.206313509891432, 3.1257522732665644, 3.0892945258903, 3.0913248056461855, 3.123789979662776, 3.286989500385363, 3.307439805234078, 3.320252978939388, 3.369828539503465, 3.4301422772661443, 3.477021286410859, 3.4980602481260554, 3.4829986241595203, 3.4147070912251745, 3.3929374564530894, 3.229986353162847, 3.194824854664537, 3.1554004137162703, 3.1093018563163866, 3.05466949255555, 3.052783397578253, 2.8182516761928156, 2.6643880054323352, 2.8140195163382513, 2.855429253021453, 2.6931143044207673, 2.375077024453449, 2.0702492844987868, 2.0836512347962772, 2.052050649810168, 2.0728548125390436, 2.0683479470781774, 2.067207825687737, 2.071579315897041, 2.210022856982217, 2.546026412164168, 2.5363932708228853, 2.7831962249229605, 3.0777775646054377, 3.2072267587738787, 3.2381719297626534, 3.3097563418715765, 3.4009113227310324, 3.3704188289411166, 3.369066233715084, 3.217386414471247, 3.0248081227110326, 2.9574075242978526, 2.987454433744272, 3.040114564011309, 3.0246992676391824, 2.966601199235969, 3.3122237276857214, 3.641850931194453, 3.6144588708977516, 3.5596478677302983, 3.519752139226285, 3.542554831509106, 3.5496468198290154, 3.6281649592418024, 3.7427096784260963, 3.742242652037993, 3.760716430544385, 3.787586570282066, 3.8044497601144514, 3.7842407763979793, 3.8218400549718554, 3.9891374839859646, 4.09883940324945, 4.333931381054256, 4.403334664715869, 4.457971457588435, 4.480576849630608, 4.719694101152566, 4.890856987006648, 4.939887655790336, 5.2502037071038945, 5.631484081793207, 5.705737370561865, 5.7110946278517885, 5.741079329270992, 5.622091578764289, 5.6124025746202015, 5.396555937187657, 5.407451295205523, 5.1951957153218835, 4.837789281768228, 4.444155978324271, 4.045255028130638, 4.039588557191168, 3.979335223958551, 3.882630000313993, 3.8730037462874742, 3.827663059307169, 3.726552138412845, 3.619964493871342, 3.510318656387109, 3.454894730263344, 3.4637859601899668, 3.513590278604215, 3.5641116540342495, 3.623724656117253, 3.6866468412331255, 3.8533091604120284, 3.9454643979803725, 3.96217030115488, 4.224079195717644, 4.589993296049582, 4.971404693197327, 5.121781950825762, 5.467480089996328, 5.61655995745012, 5.68995721588505, 5.795721753375363, 6.049841421773118, 6.086318591340156, 6.0938542599866805, 6.0993219413297215, 6.122774905558138, 6.181182039290112, 6.23769548655163, 6.278700879169048, 6.2781033567388205, 6.274449259544213, 6.168415854747942, 6.059766695368371, 6.0565115624951416, 5.814196724367672, 5.804080175764878, 5.783938336089179, 5.706625217928309, 5.710280063552027, 5.681854196925258, 5.679681223527186, 5.6881293595478635, 5.708097572976568, 5.733633898693733, 5.745307197746356, 5.746211242835901, 5.7477801324727285, 5.710670849947082, 5.733060999201812, 5.702183500518721, 5.636735040208624, 5.617347823419896, 5.617264804999008, 5.617343222306451]
        
        print len(self.mass)

        while not rospy.is_shutdown():

                 
                # start = rospy.Time.now()
                # position = np.random.choice(5,3)
                point = Point()

                for i in range(0 , 290, 1):
                    if(self.mass[i] > 0):
                       
                        if(self.mass[i] % 3 == 0):    
                            self.marker.color.r= 1
                            self.marker.color.g = 0
                            self.marker.color.b = 0
                            self.marker.color.a = 1    
                            self.marker.action = self.marker.ADD  
                            self.marker.id += 1                                          
                            self.marker.pose.position.x = self.x_marker[i]
                            self.marker.pose.position.y= self.y_marker[i]
                            self.marker.pose.position.z  = 0   
                        if(self.mass[i] % 3 == 1):    
                            self.marker.color.r= 0
                            self.marker.color.g = 1
                            self.marker.color.b = 0
                            self.marker.color.a = 1    
                            self.marker.action = self.marker.ADD  
                            self.marker.id += 1                                          
                            self.marker.pose.position.x = self.x_marker[i]
                            self.marker.pose.position.y= self.y_marker[i]
                            self.marker.pose.position.z  = 0     
                        if(int(self.mass[i] % 3 )== 2):    
                            self.marker.color.r= 0
                            self.marker.color.g = 0
                            self.marker.color.b = 1
                            self.marker.color.a = 1    
                            self.marker.action = self.marker.ADD  
                            self.marker.id += 1                                          
                            self.marker.pose.position.x = self.x_marker[i]
                            self.marker.pose.position.y= self.y_marker[i]
                            self.marker.pose.position.z  = 0            
                                               
                        self.marker_pub.publish(self.marker)
                        self.r.sleep()
                    

if __name__ == "__main__":
    VizualMark()
        